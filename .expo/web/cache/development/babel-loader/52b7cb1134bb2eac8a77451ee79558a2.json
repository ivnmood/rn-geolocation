{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nexport var Http = function () {\n  function Http() {\n    _classCallCheck(this, Http);\n  }\n\n  _createClass(Http, null, [{\n    key: \"get\",\n    value: function get(url) {\n      return _regeneratorRuntime.async(function get$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              return _context.abrupt(\"return\", request(url));\n\n            case 4:\n              _context.prev = 4;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 4]], Promise);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url) {\n      var data,\n          _args2 = arguments;\n      return _regeneratorRuntime.async(function post$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              _context2.prev = 1;\n              return _context2.abrupt(\"return\", request(url, 'POST', data));\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 5]], Promise);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url) {\n      return _regeneratorRuntime.async(function _delete$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              return _context3.abrupt(\"return\", request(url, 'DELETE'));\n\n            case 4:\n              _context3.prev = 4;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 4]], Promise);\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url) {\n      var data,\n          _args4 = arguments;\n      return _regeneratorRuntime.async(function patch$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              _context4.prev = 1;\n              return _context4.abrupt(\"return\", request(url, 'PATCH', data));\n\n            case 5:\n              _context4.prev = 5;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(_context4.t0);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[1, 5]], Promise);\n    }\n  }]);\n\n  return Http;\n}();\nHttp.HEADERS = {\n  'Content-Type': 'application/json'\n};\n\nfunction request(url) {\n  var method,\n      data,\n      config,\n      response,\n      _args5 = arguments;\n  return _regeneratorRuntime.async(function request$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          method = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 'GET';\n          data = _args5.length > 2 ? _args5[2] : undefined;\n          config = {\n            method: method,\n            headers: Http.HEADERS\n          };\n\n          if (method === 'POST' || method === 'PATCH') {\n            config.body = JSON.stringify(data);\n          }\n\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(fetch(url, config));\n\n        case 6:\n          response = _context5.sent;\n          _context5.next = 9;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 9:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["H:/BSUIR/Web/React Native/rn-self-posts/src/http.js"],"names":["Http","url","request","console","log","data","HEADERS","method","config","headers","body","JSON","stringify","fetch","response","json"],"mappings":";;;AAAA,WAAaA,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,wBAGqBC,GAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKmBC,OAAO,CAACD,GAAD,CAL1B;;AAAA;AAAA;AAAA;AAOYE,cAAAA,OAAO,CAACC,GAAR;;AAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAWsBH,GAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAW2BI,cAAAA,IAX3B,8DAWkC,EAXlC;AAAA;AAAA,gDAamBH,OAAO,CAACD,GAAD,EAAM,MAAN,EAAcI,IAAd,CAb1B;;AAAA;AAAA;AAAA;AAeYF,cAAAA,OAAO,CAACC,GAAR;;AAfZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAmBwBH,GAnBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAqBmBC,OAAO,CAACD,GAAD,EAAM,QAAN,CArB1B;;AAAA;AAAA;AAAA;AAuBYE,cAAAA,OAAO,CAACC,GAAR;;AAvBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA2BuBH,GA3BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2B4BI,cAAAA,IA3B5B,8DA2BmC,EA3BnC;AAAA;AAAA,gDA6BmBH,OAAO,CAACD,GAAD,EAAM,OAAN,EAAeI,IAAf,CA7B1B;;AAAA;AAAA;AAAA;AA+BYF,cAAAA,OAAO,CAACC,GAAR;;AA/BZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAaJ,I,CACFM,O,GAAU;AAAC,kBAAgB;AAAjB,C;;AAmCrB,SAAeJ,OAAf,CAAuBD,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BM,UAAAA,MAA5B,8DAAqC,KAArC;AAA4CF,UAAAA,IAA5C;AACUG,UAAAA,MADV,GACmB;AACXD,YAAAA,MAAM,EAANA,MADW;AAEXE,YAAAA,OAAO,EAAET,IAAI,CAACM;AAFH,WADnB;;AAMI,cAAIC,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,OAApC,EAA6C;AACzCC,YAAAA,MAAM,CAACE,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAd;AACH;;AARL;AAAA,2CAU2BQ,KAAK,CAACZ,GAAD,EAAMO,MAAN,CAVhC;;AAAA;AAUUM,UAAAA,QAVV;AAAA;AAAA,2CAWiBA,QAAQ,CAACC,IAAT,EAXjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export class Http {\r\n    static HEADERS = {'Content-Type': 'application/json'}\r\n\r\n    static async get(url) {\r\n        try {\r\n            return request(url)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    static async post(url, data = {}) {\r\n        try {\r\n            return request(url, 'POST', data)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    static async delete(url) {\r\n        try {\r\n            return request(url, 'DELETE')\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    static async patch(url, data = {}) {\r\n        try {\r\n            return request(url, 'PATCH', data)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nasync function request(url, method = 'GET', data) {\r\n    const config = {\r\n        method,\r\n        headers: Http.HEADERS\r\n    }\r\n\r\n    if (method === 'POST' || method === 'PATCH') {\r\n        config.body = JSON.stringify(data)\r\n    }\r\n\r\n    const response = await fetch(url, config)\r\n    return await response.json()\r\n}"]},"metadata":{},"sourceType":"module"}