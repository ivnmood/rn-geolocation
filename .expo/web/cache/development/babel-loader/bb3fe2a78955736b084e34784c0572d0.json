{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _handlers;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CLEAR_ERROR, HIDE_LOADER, SHOW_ERROR, SHOW_LOADER, ADD_GEOLOCATION, REMOVE_GEOLOCATION, UPDATE_GEOLOCATION, FETCH_GEOLOCATION, GET_WEATHER, FETCH_CITY_WEATHER } from \"../types\";\nvar initialState = {\n  geolocation: [],\n  cityWeather: [],\n  loading: true,\n  error: null\n};\nvar handlers = (_handlers = {}, _defineProperty(_handlers, ADD_GEOLOCATION, function (state, _ref) {\n  var id = _ref.id;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    geolocation: [].concat(_toConsumableArray(state.geolocation), [{\n      id: id,\n      temp: temp,\n      feelsLike: feelsLike,\n      description: description,\n      lat: lat,\n      lng: lng,\n      address: address,\n      date: date\n    }])\n  });\n}), _defineProperty(_handlers, GET_WEATHER, function (state, _ref2) {\n  var title = _ref2.title,\n      id = _ref2.id,\n      temp = _ref2.temp,\n      feelsLike = _ref2.feelsLike,\n      description = _ref2.description,\n      lat = _ref2.lat,\n      lng = _ref2.lng;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    cityWeather: [].concat(_toConsumableArray(state.cityWeather), [{\n      id: id,\n      title: title,\n      temp: temp,\n      feelsLike: feelsLike,\n      description: description,\n      lat: lat,\n      lng: lng\n    }]),\n    loading: false\n  });\n}), _defineProperty(_handlers, REMOVE_GEOLOCATION, function (state, _ref3) {\n  var id = _ref3.id;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    geolocation: state.geolocation.filter(function (geo) {\n      return geo.id !== id;\n    })\n  });\n}), _defineProperty(_handlers, SHOW_LOADER, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: true\n  });\n}), _defineProperty(_handlers, HIDE_LOADER, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loading: false\n  });\n}), _defineProperty(_handlers, SHOW_ERROR, function (state, _ref4) {\n  var error = _ref4.error;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: error\n  });\n}), _defineProperty(_handlers, CLEAR_ERROR, function (state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    error: null\n  });\n}), _defineProperty(_handlers, FETCH_GEOLOCATION, function (state, _ref5) {\n  var geolocation = _ref5.geolocation;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    geolocation: geolocation,\n    loading: false\n  });\n}), _defineProperty(_handlers, FETCH_CITY_WEATHER, function (state, _ref6) {\n  var cityWeather = _ref6.cityWeather;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    cityWeather: cityWeather,\n    loading: false\n  });\n}), _defineProperty(_handlers, \"DEFAULT\", function DEFAULT(state) {\n  return state;\n}), _handlers);\nexport var geolocationReducer = function geolocationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};","map":{"version":3,"sources":["H:/BSUIR/Web/React Native/rn-self-posts/src/store/geolocationReducer.js"],"names":["CLEAR_ERROR","HIDE_LOADER","SHOW_ERROR","SHOW_LOADER","ADD_GEOLOCATION","REMOVE_GEOLOCATION","UPDATE_GEOLOCATION","FETCH_GEOLOCATION","GET_WEATHER","FETCH_CITY_WEATHER","initialState","geolocation","cityWeather","loading","error","handlers","state","id","temp","feelsLike","description","lat","lng","address","date","title","filter","geo","geolocationReducer","action","handler","type","DEFAULT"],"mappings":"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","sourcesContent":["import {\r\n    CLEAR_ERROR,\r\n    HIDE_LOADER,\r\n    SHOW_ERROR,\r\n    SHOW_LOADER,\r\n    ADD_GEOLOCATION, REMOVE_GEOLOCATION, UPDATE_GEOLOCATION, FETCH_GEOLOCATION, GET_WEATHER, FETCH_CITY_WEATHER\r\n} from \"../types\";\r\n\r\n\r\nconst initialState = {\r\n    geolocation: [],\r\n    cityWeather: [],\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nconst handlers = {\r\n    [ADD_GEOLOCATION]: (state, {id}) => ({\r\n        ...state,\r\n        geolocation: [...state.geolocation, {id, temp, feelsLike, description, lat, lng, address, date}]\r\n    }),\r\n    [GET_WEATHER]: (state, {title, id, temp, feelsLike, description, lat, lng}) => ({\r\n        ...state,\r\n        cityWeather: [...state.cityWeather, {id, title, temp, feelsLike, description, lat, lng}],\r\n        loading: false\r\n    }),\r\n    [REMOVE_GEOLOCATION]: (state, {id}) => ({\r\n        ...state,\r\n        geolocation: state.geolocation.filter(geo => geo.id !== id)\r\n    }),\r\n    [SHOW_LOADER]: (state) => ({...state, loading: true}),\r\n    [HIDE_LOADER]: (state) => ({...state, loading: false}),\r\n    [SHOW_ERROR]: (state, {error}) => ({...state, error}),\r\n    [CLEAR_ERROR]: (state) => ({...state, error: null}),\r\n    [FETCH_GEOLOCATION]: (state, {geolocation}) => ({...state, geolocation, loading: false}),\r\n    [FETCH_CITY_WEATHER]: (state, {cityWeather}) => ({...state, cityWeather, loading: false}),\r\n\r\n    DEFAULT: state => state\r\n}\r\n\r\n\r\nexport const geolocationReducer = (state = initialState, action) => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT\r\n    return handler(state, action)\r\n}"]},"metadata":{},"sourceType":"module"}