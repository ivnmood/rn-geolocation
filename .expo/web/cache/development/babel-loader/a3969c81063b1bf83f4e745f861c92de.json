{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"H:\\\\BSUIR\\\\Web\\\\React Native\\\\rn-self-posts\\\\src\\\\screens\\\\MainScreen.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { HeaderButtons, Item } from \"react-navigation-header-buttons\";\nimport { AppHeaderIcon } from \"../components/AppHeadersIcon\";\nimport { GetWeather } from \"../components/GetWeather\";\nimport { THEME } from \"../theme\";\nimport * as Permissions from 'expo-permissions';\nimport { FindMe } from \"../components/FindMe\";\nimport { AppCard } from \"../components/ui/AppCard\";\nimport { useSelector } from \"react-redux\";\n\nfunction askPermission() {\n  var _await$Permissions$as, status;\n\n  return _regeneratorRuntime.async(function askPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n        case 2:\n          _await$Permissions$as = _context.sent;\n          status = _await$Permissions$as.status;\n\n          if (!(status !== 'granted')) {\n            _context.next = 7;\n            break;\n          }\n\n          Alert.alert('Error', 'Enable geoposition search in the settings');\n          return _context.abrupt(\"return\", false);\n\n        case 7:\n          return _context.abrupt(\"return\", true);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport var MainScreen = function MainScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var geolocation = useSelector(function (state) {\n    return state.geo.geolocation;\n  });\n  var content;\n\n  if (geolocation.length === 0) {\n    content = React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"While it's empty\");\n  } else {\n    content = React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Address: \", geolocation[geolocation.length - 1].address), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Date: \", geolocation[geolocation.length - 1].date), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Temperature: \", geolocation[geolocation.length - 1].temp), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, \"Feels like: \", geolocation[geolocation.length - 1].feelsLike), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Description: \", geolocation[geolocation.length - 1].description), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Lat: \", geolocation[geolocation.length - 1].lat), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Lng: \", geolocation[geolocation.length - 1].lng));\n  }\n\n  return React.createElement(View, {\n    style: styles.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, React.createElement(View, {\n    style: styles.getWeather,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(GetWeather, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), React.createElement(FindMe, {\n    askPermission: askPermission,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(AppCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, content));\n};\n\nMainScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTitle: 'Geolocation&Weather',\n    headerLeft: function headerLeft() {\n      return React.createElement(HeaderButtons, {\n        HeaderButtonComponent: AppHeaderIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }, React.createElement(Item, {\n        onPress: function onPress() {\n          return navigation.toggleDrawer();\n        },\n        iconName: \"ios-menu\",\n        title: \"Toggle Drawer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 20\n  },\n  center: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  getWeather: {\n    marginTop: 10,\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  error: {\n    fontSize: 20,\n    color: THEME.DANGER_COLOR,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["H:/BSUIR/Web/React Native/rn-self-posts/src/screens/MainScreen.js"],"names":["React","HeaderButtons","Item","AppHeaderIcon","GetWeather","THEME","Permissions","FindMe","AppCard","useSelector","askPermission","askAsync","LOCATION","status","Alert","alert","MainScreen","geolocation","state","geo","content","length","styles","text","address","date","temp","feelsLike","description","lat","lng","center","getWeather","navigationOptions","navigation","headerTitle","headerLeft","toggleDrawer","StyleSheet","create","fontSize","flex","justifyContent","alignItems","marginTop","error","color","DANGER_COLOR","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {View, Text, StyleSheet, Alert} from 'react-native'\r\nimport {HeaderButtons, Item} from \"react-navigation-header-buttons\";\r\nimport {AppHeaderIcon} from \"../components/AppHeadersIcon\";\r\nimport {GetWeather} from \"../components/GetWeather\";\r\nimport {THEME} from \"../theme\";\r\nimport * as Permissions from 'expo-permissions';\r\nimport {FindMe} from \"../components/FindMe\";\r\nimport {AppCard} from \"../components/ui/AppCard\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\nasync function askPermission() {\r\n    const {status} = await Permissions.askAsync(\r\n        Permissions.LOCATION\r\n    )\r\n    if (status !== 'granted') {\r\n        Alert.alert('Error', 'Enable geoposition search in the settings')\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\n\r\n\r\nexport const MainScreen = ({}) => {\r\n\r\n    const geolocation = useSelector(state => state.geo.geolocation)\r\n\r\n    let content\r\n    if (geolocation.length === 0) {\r\n        content = <Text style={styles.text}>While it's empty</Text>\r\n    } else {\r\n        content = <View>\r\n            <Text>Address: {geolocation[geolocation.length - 1].address}</Text>\r\n            <Text>Date: {geolocation[geolocation.length - 1].date}</Text>\r\n            <Text>Temperature: {geolocation[geolocation.length - 1].temp}</Text>\r\n            <Text>Feels like: {geolocation[geolocation.length - 1].feelsLike}</Text>\r\n            <Text>Description: {geolocation[geolocation.length - 1].description}</Text>\r\n            <Text>Lat: {geolocation[geolocation.length - 1].lat}</Text>\r\n            <Text>Lng: {geolocation[geolocation.length - 1].lng}</Text>\r\n\r\n        </View>\r\n\r\n    }\r\n\r\n    return <View style={styles.center}>\r\n\r\n        <View style={styles.getWeather}>\r\n            <GetWeather/>\r\n        </View>\r\n        <FindMe askPermission={askPermission} />\r\n        <AppCard>\r\n            {content}\r\n        </AppCard>\r\n    </View>\r\n}\r\n\r\n\r\nMainScreen.navigationOptions = ({navigation}) => ({\r\n    headerTitle: 'Geolocation&Weather',\r\n    headerLeft: () => <HeaderButtons HeaderButtonComponent={AppHeaderIcon}>\r\n        <Item\r\n            onPress={() => navigation.toggleDrawer()}\r\n            iconName='ios-menu'\r\n            title='Toggle Drawer'/>\r\n    </HeaderButtons>\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontSize: 20\r\n    },\r\n    center: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    getWeather: {\r\n        marginTop: 10,\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center'\r\n    },\r\n    error: {\r\n        fontSize: 20,\r\n        color: THEME.DANGER_COLOR,\r\n        marginBottom: 10\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}