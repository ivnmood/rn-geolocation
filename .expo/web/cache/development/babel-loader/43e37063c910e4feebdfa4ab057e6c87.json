{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"H:\\\\BSUIR\\\\Web\\\\React Native\\\\rn-self-posts\\\\src\\\\components\\\\FindMe.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { THEME } from \"../theme\";\nimport { useDispatch } from 'react-redux';\nimport { addGeolocation, fetchCityWeather, fetchGeolocation } from \"../store/geolocationAction\";\nexport var FindMe = function FindMe(_ref) {\n  var askPermission = _ref.askPermission;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonClicked = _useState2[0],\n      setButtonClicked = _useState2[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(fetchGeolocation());\n  }, [buttonClicked]);\n\n  var sendGeolocation = function sendGeolocation() {\n    dispatch(addGeolocation());\n    setTimeout(function () {\n      return setButtonClicked(!buttonClicked);\n    }, 3000);\n    askPermission();\n  };\n\n  return React.createElement(View, {\n    style: styles.block,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Find me\",\n    onPress: sendGeolocation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  block: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  input: {\n    width: '80%',\n    borderStyle: 'solid',\n    borderBottomWidth: 2,\n    borderBottomColor: THEME.MAIN_COLOR,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["H:/BSUIR/Web/React Native/rn-self-posts/src/components/FindMe.js"],"names":["React","useEffect","useState","THEME","useDispatch","addGeolocation","fetchCityWeather","fetchGeolocation","FindMe","askPermission","buttonClicked","setButtonClicked","dispatch","sendGeolocation","setTimeout","styles","block","StyleSheet","create","flexDirection","justifyContent","alignItems","marginBottom","input","width","borderStyle","borderBottomWidth","borderBottomColor","MAIN_COLOR","padding"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;AAEA,SAAQC,KAAR;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,EAAwBC,gBAAxB,EAA0CC,gBAA1C;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAqB;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;;AAAA,kBAEGP,QAAQ,CAAC,KAAD,CAFX;AAAA;AAAA,MAEhCQ,aAFgC;AAAA,MAEjBC,gBAFiB;;AAGvC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,CAACG,aAAD,CAFM,CAAT;;AAMA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BD,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AACAS,IAAAA,UAAU,CAAC;AAAA,aAAMH,gBAAgB,CAAC,CAACD,aAAF,CAAtB;AAAA,KAAD,EAAyC,IAAzC,CAAV;AACAD,IAAAA,aAAa;AAChB,GAJD;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEH,eAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAtBM;AAwBP,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,KAAK,EAAE;AACHG,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,cAAc,EAAE,eAFb;AAGHC,IAAAA,UAAU,EAAE,QAHT;AAIHC,IAAAA,YAAY,EAAE;AAJX,GADsB;AAO7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,WAAW,EAAE,OAFV;AAGHC,IAAAA,iBAAiB,EAAE,CAHhB;AAIHC,IAAAA,iBAAiB,EAAExB,KAAK,CAACyB,UAJtB;AAKHC,IAAAA,OAAO,EAAE;AALN;AAPsB,CAAlB,CAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {View, StyleSheet, TextInput, Button, Alert, Keyboard} from 'react-native'\r\nimport {THEME} from \"../theme\";\r\nimport {useDispatch} from 'react-redux'\r\nimport {addGeolocation, fetchCityWeather, fetchGeolocation} from \"../store/geolocationAction\";\r\n\r\nexport const FindMe = ({askPermission}) => {\r\n\r\n    const [buttonClicked, setButtonClicked] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchGeolocation())\r\n    }, [buttonClicked])\r\n\r\n\r\n\r\n    const sendGeolocation = () => {\r\n        dispatch(addGeolocation())\r\n        setTimeout(() => setButtonClicked(!buttonClicked), 3000)\r\n        askPermission()\r\n    }\r\n\r\n    return (\r\n        <View style={styles.block}>\r\n            <Button title='Find me' onPress={sendGeolocation}/>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    block: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: 15,\r\n    },\r\n    input: {\r\n        width: '80%',\r\n        borderStyle: 'solid',\r\n        borderBottomWidth: 2,\r\n        borderBottomColor: THEME.MAIN_COLOR,\r\n        padding: 5,\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}